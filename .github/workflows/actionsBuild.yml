name: actionsBuildApp

on: [ push ]

env:
  JAVA_VERSION: 20

jobs:



  jobLint:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
    steps:

      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        if: ${{ matrix.os != 'self-hosted' }}
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/gradle-build-action@v3
        with:
          arguments: ciLint --stacktrace



  jobUnitTest:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest ]
    steps:

      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        if: ${{ matrix.os != 'self-hosted' }}
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/gradle-build-action@v3
        with:
          arguments: ciUnitTest --stacktrace



  jobRecordScreenshots:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest ]
    steps:

      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        if: ${{ matrix.os != 'self-hosted' }}
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/gradle-build-action@v3
        with:
          arguments: ciRecordScreenshots --stacktrace



  jobBuildApp:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
    steps:

      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        if: ${{ matrix.os != 'self-hosted' }}
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/gradle-build-action@v3
        with:
          arguments: ciBuildApp --stacktrace

      - uses: actions/upload-artifact@v3
        with:
          name: apk
          path: build/apk/



  jobEmulatorMatrixSetup:
    runs-on: ubuntu-latest
    outputs:
      emulator_jobs_matrix: ${{ steps.dataStep.outputs.emulator_jobs_matrix }}
    steps:

      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        if: ${{ matrix.os != 'self-hosted' }}
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/gradle-build-action@v3
        with:
          arguments: ciEmulatorJobsMatrixSetup --stacktrace

      - id: dataStep
        run: echo "emulator_jobs_matrix=$(jq -c . < ./build/emulator_jobs_matrix.json)" >> $GITHUB_OUTPUT



  Emulator:
    needs: jobEmulatorMatrixSetup
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.jobEmulatorMatrixSetup.outputs.emulator_jobs_matrix) }}
    steps:

      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        if: ${{ matrix.os != 'self-hosted' }}
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - uses: android-actions/setup-android@v2

      - uses: gradle/gradle-build-action@v3
        with:
          arguments: ${{ matrix.gradle_tasks }} --stacktrace
